formula = { (equality | logical_formula | quantification) }

equality = { expression ~ "=" ~ expression }

logical_formula = { "[" ~ formula ~ logical_op ~ formula ~ "]" }
logical_op = { "&" | "|" | ">" | "∧" | "∨" | "⇒" }

quantification = { quantifier ~ formula | negated_quantifier ~ formula }
quantifier = { existential | universal  }
negated_quantifier = { ( "~"|"¬" ) ~ quantifier }
universal = { ("A"|"∀") ~ variable ~ ":" }
existential = { ("E"|"∃") ~ variable ~ ":" }

expression = { number | variable | arithmetic_expr | successor_expr }
number = { "S"* ~ "0" }
variable = { ASCII_ALPHA_LOWER ~ "'"* }
arithmetic_expr = { "(" ~ expression ~ arith_op ~ expression ~ ")" }
arith_op = { "+" | "*" | "×" }
successor_expr = { "S" ~ expression }